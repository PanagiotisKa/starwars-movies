{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nconst initialState = {\n  value: null,\n  loading: false,\n  error: null\n};\nconst episodeListSlice = createSlice({\n  name: 'episodeLists',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getEpisodeListData.pending, state => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(getEpisodeListData.fulfilled, (state, action) => {\n      state.loading = false;\n      state.value = action.payload.results;\n    });\n    builder.addCase(getEpisodeListData.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload ? action.payload : 'Unknown error';\n    });\n  }\n});\nexport const getEpisodeListData = createAsyncThunk(\"episodeList/getEpisodeData\", async ([endpoint1, endpoint2], thunkAPI) => {\n  try {\n    const BasicResults = await axios.get(endpoint1);\n    if (Array.isArray(BasicResults.data.results)) {\n      for (let i = 0; i < BasicResults.data.results.length; i++) {\n        const ExtraResults = await axios.get(endpoint2 + `t=Star+Wars&y=${BasicResults.data.results[i].release_date.split(\"-\")[0]}`);\n        // Ratings\n        BasicResults.data.results[i]['poster'] = ExtraResults.data.Poster;\n        BasicResults.data.results[i]['rating_IMD'] = parseFloat(ExtraResults.data.Ratings[0].Value.split(\"/\")[0]);\n        BasicResults.data.results[i]['rating_RottenTomatoes'] = parseInt(ExtraResults.data.Ratings[1].Value.split(\"%\")[0]) / 10;\n        BasicResults.data.results[i]['rating_Metacritic'] = parseInt(ExtraResults.data.Ratings[2].Value.split(\"/\")[0]) / 10;\n        // Director\n        BasicResults.data.results[i]['director'] = ExtraResults.data.Director;\n        // Average Rating calculation\n        BasicResults.data.results[i]['general_rating'] = (BasicResults.data.results[i]['rating_IMD'] + BasicResults.data.results[i]['rating_RottenTomatoes'] + BasicResults.data.results[i]['rating_Metacritic']) / 3;\n      }\n    }\n    return BasicResults.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport default episodeListSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","value","loading","error","episodeListSlice","name","reducers","extraReducers","builder","addCase","getEpisodeListData","pending","state","fulfilled","action","payload","results","rejected","endpoint1","endpoint2","thunkAPI","BasicResults","get","Array","isArray","data","i","length","ExtraResults","release_date","split","Poster","parseFloat","Ratings","Value","parseInt","Director","rejectWithValue","message","reducer"],"sources":["C:/Users/pkakaletris/Desktop/programms/LEARNING/etravel/starwars-movies/src/state/episodeListSlice.ts"],"sourcesContent":["import { PayloadAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport axios  from 'axios'\r\n\r\ninterface EpisodeItem {\r\n    episode_id: number\r\n        title: string\r\n        opening_crawl: string\r\n        release_date: string\r\n        poster: string\r\n        director: string\r\n        rating_IMD: number\r\n        rating_RottenTomatoes: number\r\n        rating_Metacritic: number\r\n        general_rating : number\r\n}\r\n\r\ninterface EpisodeListState {\r\n    value: Array<EpisodeItem> | null\r\n    loading: boolean\r\n    error: string | null\r\n}\r\n\r\ninterface DataResponse {\r\n    results: Array<EpisodeItem>\r\n}\r\n\r\ninterface ExtraDataResponse {\r\n    Poster: string\r\n    Director: string\r\n    Ratings: {\r\n        Source: string,\r\n        Value: string\r\n    }[]\r\n}\r\n\r\n\r\nconst initialState: EpisodeListState = {\r\n    value : null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst episodeListSlice = createSlice({\r\n    name: 'episodeLists',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getEpisodeListData.pending, (state)=>{\r\n            state.loading = true\r\n            state.error = null\r\n        })\r\n\r\n        builder.addCase(getEpisodeListData.fulfilled, (state, action: PayloadAction<DataResponse>)=>{\r\n            state.loading = false\r\n            state.value = action.payload.results\r\n        })\r\n\r\n        builder.addCase(getEpisodeListData.rejected, (state, action)=>{\r\n            state.loading = false\r\n            state.error = action.payload ? action.payload as string : 'Unknown error'\r\n        })\r\n\r\n\r\n    }\r\n})\r\n\r\nexport const getEpisodeListData = createAsyncThunk(\r\n    \"episodeList/getEpisodeData\",\r\n    async ([endpoint1, endpoint2]: string[], thunkAPI) => {\r\n        try {\r\n        const BasicResults = await axios.get<DataResponse>(endpoint1)\r\n        if(Array.isArray(BasicResults.data.results) ) {\r\n            for(let i =0; i< BasicResults.data.results.length; i++){\r\n                const ExtraResults = await axios.get<ExtraDataResponse>(endpoint2 + `t=Star+Wars&y=${BasicResults.data.results[i].release_date.split(\"-\")[0]}` )\r\n                // Ratings\r\n                BasicResults.data.results[i]['poster'] = ExtraResults.data.Poster\r\n                BasicResults.data.results[i]['rating_IMD'] = parseFloat(ExtraResults.data.Ratings[0].Value.split(\"/\")[0])\r\n                BasicResults.data.results[i]['rating_RottenTomatoes'] = parseInt(ExtraResults.data.Ratings[1].Value.split(\"%\")[0])/10\r\n                BasicResults.data.results[i]['rating_Metacritic'] = parseInt(ExtraResults.data.Ratings[2].Value.split(\"/\")[0])/10\r\n                // Director\r\n                BasicResults.data.results[i]['director'] = ExtraResults.data.Director\r\n                // Average Rating calculation\r\n                BasicResults.data.results[i]['general_rating'] = ((BasicResults.data.results[i]['rating_IMD']+BasicResults.data.results[i]['rating_RottenTomatoes']\r\n                    +BasicResults.data.results[i]['rating_Metacritic'])/3)\r\n            }\r\n        \r\n        }\r\n            return BasicResults.data\r\n\r\n        } catch (error: any) { return thunkAPI.rejectWithValue(error.message) }\r\n    }\r\n\r\n)\r\n\r\nexport default episodeListSlice.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}